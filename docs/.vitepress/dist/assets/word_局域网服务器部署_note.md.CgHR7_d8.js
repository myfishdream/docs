import{_ as a,c as e,a2 as n,G as t,B as h,o as l}from"./chunks/framework.BhYLs7xu.js";const y=JSON.parse('{"title":"局域网服务器部署","description":"","frontmatter":{},"headers":[],"relativePath":"word/局域网服务器部署/note.md","filePath":"word/局域网服务器部署/note.md"}'),p={name:"word/局域网服务器部署/note.md"};function k(d,s,r,o,E,c){const i=h("Giscus");return l(),e("div",null,[s[0]||(s[0]=n(`<h1 id="局域网服务器部署" tabindex="-1">局域网服务器部署 <a class="header-anchor" href="#局域网服务器部署" aria-label="Permalink to &quot;局域网服务器部署&quot;">​</a></h1><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><p>一个可以运行的Node.js的服务器，例如一下的Express 服务器</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// server.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> express</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;express&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> express</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, this is a Node.js server running on the LAN!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Server is running on http://localhost:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>运行以下命令启动服务器：</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node server.js</span></span></code></pre></div><p><strong>此时，服务器会在 <code>http://localhost:3000</code> 上运行，但只能在本地访问。</strong></p><h2 id="获取本机的局域网-ip-地址" tabindex="-1">获取本机的局域网 IP 地址 <a class="header-anchor" href="#获取本机的局域网-ip-地址" aria-label="Permalink to &quot;获取本机的局域网 IP 地址&quot;">​</a></h2><p>为了让其他设备访问你的服务器，你需要知道本机在局域网中的 IP 地址。</p><ol><li><p>打开命令提示符（按 <code>Win + R</code>，输入 <code>cmd</code>，然后按回车）。</p></li><li><p>输入以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ipconfig</span></span></code></pre></div></li><li><p>找到 <code>IPv4 地址</code>，通常是 <code>192.168.x.x</code> 或 <code>10.x.x.x</code>。</p></li></ol><h2 id="修改-node-js-服务器监听地址" tabindex="-1">修改 Node.js 服务器监听地址 <a class="header-anchor" href="#修改-node-js-服务器监听地址" aria-label="Permalink to &quot;修改 Node.js 服务器监听地址&quot;">​</a></h2><p>默认情况下，Node.js 服务器只监听 <code>localhost</code>（即 <code>127.0.0.1</code>），这意味着它只能从本机访问。为了让服务器监听局域网中的所有请求，需要将监听地址改为 <code>0.0.0.0</code>。</p><p><strong>修改 <code>server.js</code> 文件：</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Server is running on http://0.0.0.0:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>重新启动服务器</strong></p><h2 id="允许防火墙通过端口" tabindex="-1">允许防火墙通过端口 <a class="header-anchor" href="#允许防火墙通过端口" aria-label="Permalink to &quot;允许防火墙通过端口&quot;">​</a></h2><p>如果你的操作系统启用了防火墙，需要确保防火墙允许外部设备访问服务器的端口（例如 <code>3000</code>）。</p><p><strong>在 Windows 上允许端口</strong></p><ol><li>打开“控制面板” -&gt; “系统和安全” -&gt; “Windows Defender 防火墙” -&gt; “高级设置”。</li><li>选择“入站规则” -&gt; “新建规则”。</li><li>选择“端口”，点击“下一步”。</li><li>选择“TCP”，并输入端口号 <code>3000</code>，点击“下一步”。</li><li>选择“允许连接”，点击“下一步”。</li><li>为规则命名（例如 <code>Node.js Server</code>），点击“完成”。</li></ol><h2 id="在局域网中访问服务器" tabindex="-1">在局域网中访问服务器 <a class="header-anchor" href="#在局域网中访问服务器" aria-label="Permalink to &quot;在局域网中访问服务器&quot;">​</a></h2><p>现在，其他设备可以通过你的局域网 IP 地址和端口号访问服务器。</p><p>例如，如果你的 IP 地址是 <code>192.168.1.100</code>，端口号是 <code>3000</code>，其他设备可以在浏览器中访问：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//192.168.1.100:3000</span></span></code></pre></div><h2 id="使用工具测试局域网访问" tabindex="-1">使用工具测试局域网访问 <a class="header-anchor" href="#使用工具测试局域网访问" aria-label="Permalink to &quot;使用工具测试局域网访问&quot;">​</a></h2><p>你可以使用手机或其他电脑，连接到同一个局域网，然后通过浏览器访问服务器的 IP 地址和端口号，确保服务可以正常访问。</p><h2 id="基于vitepress搭建博客部署局域网" tabindex="-1">基于vitePress搭建博客部署局域网 <a class="header-anchor" href="#基于vitepress搭建博客部署局域网" aria-label="Permalink to &quot;基于vitePress搭建博客部署局域网&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0.0.0</span></span></code></pre></div><h2 id="评论" tabindex="-1">评论 <a class="header-anchor" href="#评论" aria-label="Permalink to &quot;评论&quot;">​</a></h2>`,28)),t(i)])}const F=a(p,[["render",k]]);export{y as __pageData,F as default};
