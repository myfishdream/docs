# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy VitePress site to Pages

on:
  # Runs on pushes targeting the `main` branch. Change this to `master` if you're
  # using the `master` branch as the default branch.
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      # - uses: pnpm/action-setup@v3 # Uncomment this block if you're using pnpm
      #   with:
      #     version: 9 # Not needed if you've set "packageManager" in package.json
      # - uses: oven-sh/setup-bun@v1 # Uncomment this if you're using Bun
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci # or pnpm install / yarn install / bun install
      - name: Build with VitePress
        run: npm run docs:build # or pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  optimize:
    runs-on: ubuntu-latest  # 使用最新的Ubuntu环境
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}  # 使用PAT
      # 2. 设置Node.js环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # 使用Node.js 18

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          npm install -g imagemin-cli imagemin-pngquant imagemin-mozjpeg imagemin-gifsicle imagemin-svgo
          npm install -g cssnano uglify-js
          npm install -g vue

      # 4. 压缩图片
      - name: Optimize images
        run: |
          imagemin "docs/**/*.{jpg,jpeg,png,gif,svg}" --plugin=pngquant --plugin=mozjpeg --plugin=gifsicle --plugin=svgo --out-dir=docs/assets/images

      # 5. 最小化CSS文件
      - name: Minify CSS
        run: |
          find -type f -name "*.css" -exec cssnano {} -o {} \;

      # 6. 最小化JS文件
      - name: Minify JS
        run: |
          find -type f -name "*.js" ! -name "*.min.js" -exec uglifyjs {} -o {} \;

      # 7. 最小化Vue文件
      - name: Minify Vue files
        run: |
          find -type f -name "*.vue" -exec sh -c 'uglifyjs --toplevel -c -m -o "\$1" "\$1"' _ {} \;
      # 打印文件前后大小
      - name: Check file sizes before optimization
        run: find docs -type f \( -name "*.css" -o -name "*.js" -o -name "*.vue" -o -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" \) -exec du -h {} \;
      - name: Check file sizes after optimization
        run: find docs -type f \( -name "*.css" -o -name "*.js" -o -name "*.vue" -o -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" \) -exec du -h {} \;
      # 8. 提交优化后的文件
      - name: Commit optimized files
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add docs
          git commit -m "Optimized resources via GitHub Actions" || echo "No changes to commit"
          git push
